-- Migration Procedure
CREATE OR REPLACE PROCEDURE MIGRATION_BCM AS
BEGIN
  -- Migrate Contacts
  MERGE INTO BCM_CONTACT A
  USING (
    SELECT DISTINCT SUPP_CONTACT_NAME, SUPP_ADDRESS, 
    GET_VALIDATED_PHONENUMBER(SUPP_CONTACT_NUMBER) AS SUPP_CONTACT_NUMBER, 
    SUPP_EMAIL FROM BCM_ORDER_MGT
  ) A1
  ON (
    A.SUPP_CONTACT_NAME = A1.SUPP_CONTACT_NAME
    AND A.SUPP_ADDRESS = A1.SUPP_ADDRESS
    AND A.SUPP_CONTACT_NUMBER = A1.SUPP_CONTACT_NUMBER
    AND A.SUPP_EMAIL = A1.SUPP_EMAIL
  )
  WHEN NOT MATCHED THEN INSERT (
    SUPP_CONTACT_NAME, SUPP_ADDRESS, SUPP_CONTACT_NUMBER, SUPP_EMAIL
  ) VALUES (
    A1.SUPP_CONTACT_NAME, A1.SUPP_ADDRESS, A1.SUPP_CONTACT_NUMBER, A1.SUPP_EMAIL
  );

  -- Migrate Suppliers
  MERGE INTO BCM_SUPPLIER B
  USING (
    SELECT DISTINCT y.CONTACT_ID, x.SUPPLIER_NAME
    FROM BCM_ORDER_MGT x
    INNER JOIN BCM_CONTACT y 
    ON x.SUPP_CONTACT_NAME = y.SUPP_CONTACT_NAME
    AND x.SUPP_ADDRESS = y.SUPP_ADDRESS
    AND GET_VALIDATED_PHONENUMBER(x.SUPP_CONTACT_NUMBER) = y.SUPP_CONTACT_NUMBER
    AND x.SUPP_EMAIL = y.SUPP_EMAIL
  ) B1
  ON (B.SUPPLIER_NAME = B1.SUPPLIER_NAME AND B.CONTACT_ID = B1.CONTACT_ID)
  WHEN NOT MATCHED THEN INSERT (CONTACT_ID, SUPPLIER_NAME) 
  VALUES (B1.CONTACT_ID, B1.SUPPLIER_NAME);

  -- Migrate Orders
  MERGE INTO BCM_ORDER C
  USING (
    SELECT DISTINCT y.SUPPLIER_ID, REGEXP_REPLACE(x.ORDER_REF, '[^0-9]', '') AS ORDER_REF,
    GET_VALIDATED_DATE(x.ORDER_DATE) AS ORDER_DATE, 
    GET_VALIDATED_NUMBER(x.ORDER_TOTAL_AMOUNT) AS ORDER_TOTAL_AMOUNT, 
    ORDER_DESCRIPTION, ORDER_STATUS, 
    GET_VALIDATED_NUMBER(x.ORDER_LINE_AMOUNT) AS ORDER_LINE_AMOUNT
    FROM BCM_ORDER_MGT x
    INNER JOIN BCM_SUPPLIER y ON x.SUPPLIER_NAME = y.SUPPLIER_NAME
  ) C1
  ON (C.ORDER_REF = C1.ORDER_REF)
  WHEN NOT MATCHED THEN INSERT (
    SUPPLIER_ID, ORDER_REF, ORDER_DATE, ORDER_TOTAL_AMOUNT, ORDER_DESCRIPTION, ORDER_STATUS, ORDER_LINE_AMOUNT
  ) VALUES (
    C1.SUPPLIER_ID, C1.ORDER_REF, C1.ORDER_DATE, C1.ORDER_TOTAL_AMOUNT, C1.ORDER_DESCRIPTION, C1.ORDER_STATUS, C1.ORDER_LINE_AMOUNT
  );

  -- Migrate Invoices
 MERGE INTO BCM_INVOICE D
 USING (
    SELECT DISTINCT y.ORDER_ID, x.INVOICE_REFERENCE, 
    GET_VALIDATED_DATE(x.INVOICE_DATE) AS INVOICE_DATE, 
    x.INVOICE_STATUS, x.INVOICE_HOLD_REASON, 
    GET_VALIDATED_NUMBER(x.INVOICE_AMOUNT) AS INVOICE_AMOUNT, 
    x.INVOICE_DESCRIPTION
    FROM BCM_ORDER_MGT x
    INNER JOIN BCM_ORDER y 
    ON REGEXP_REPLACE(x.ORDER_REF, '[^0-9]', '') = REGEXP_REPLACE(y.ORDER_REF, '[^0-9]', '')
 ) D1
 ON (D.INVOICE_REFERENCE = D1.INVOICE_REFERENCE)
 WHEN NOT MATCHED THEN INSERT (
    ORDER_ID, INVOICE_REFERENCE, INVOICE_DATE, INVOICE_STATUS, INVOICE_HOLD_REASON, INVOICE_AMOUNT, INVOICE_DESCRIPTION
 ) VALUES (
    D1.ORDER_ID, D1.INVOICE_REFERENCE, D1.INVOICE_DATE, D1.INVOICE_STATUS, D1.INVOICE_HOLD_REASON, D1.INVOICE_AMOUNT, D1.INVOICE_DESCRIPTION
 );
 
  -- Final commit
  COMMIT;
END;
/
